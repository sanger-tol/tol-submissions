# SPDX-FileCopyrightText: 2021 Genome Research Ltd.
#
# SPDX-License-Identifier: MIT

# This file assumes that staging and master commits will have previously been built and
# tested in the dev branch (deployment will fail otherwise)
#
# test-integration will deploy a test instance and run tests. It uses a resource_group
# to ensure that other pipelines cannot run this task at the same time
include:
  - project: 'tol/tol-core'
    ref: main
    file: '/gitlab/main.yml'

stages:
  - lint
  - build
  - deploy

build-api:
  extends: .build-template
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    PART: "submissions-api"
    DOCKERFILE: "submissions-api/Dockerfile"
    NAME: "submissions-api"

build-ui:
  extends: .build-template
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    PART: "submissions-ui"
    DOCKERFILE: 'submissions-ui/Dockerfile'
    NAME: "submissions-ui"

deploy-qa:
  extends: .swarm-deploy-template
  environment:
    name: qa
    url: http://172.27.17.15:8000
  variables:
    DOCKER_HOST: "ssh://ubuntu@172.27.17.15"
    EXTRA_DEPLOY_FILES: "-c docker-compose.gitlab-logging.yml"
    STACK_NAME: submissions
  script:
    - echo "Deployed to qa"
  only:
    - qa

deploy-staging:
  extends: .swarm-deploy-template
  environment:
    name: staging
    url: https://submissions-staging.tol.sanger.ac.uk
  variables:
    DOCKER_HOST: "ssh://ubuntu@172.27.22.28"
    EXTRA_DEPLOY_FILES: "-c docker-compose.gitlab-logging.yml"
    STACK_NAME: submissions
  script:
    - echo "Deployed to staging"
  only:
    - staging

deploy-production:
  extends: .swarm-deploy-template
  environment:
    name: production
    url: https://submissions.tol.sanger.ac.uk/
  variables:
    DOCKER_HOST: "ssh://ubuntu@172.27.22.202"
    EXTRA_DEPLOY_FILES: "-c docker-compose.gitlab-logging.yml"
    STACK_NAME: submissions
  script:
    - echo "Deployed to production"
  only:
    - production
  when: manual
