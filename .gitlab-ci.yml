# SPDX-FileCopyrightText: 2021 Genome Research Ltd.
#
# SPDX-License-Identifier: MIT

# This file assumes that staging and master commits will have previously been built and
# tested in the dev branch (deployment will fail otherwise)
#
# test-integration will deploy a test instance and run tests. It uses a resource_group
# to ensure that other pipelines cannot run this task at the same time
include:
  - project: 'tol/tol-core'
    ref: main
    file: '/gitlab/main.yml'

stages:
  - lint
  - build
  - unit test
  - push
  - deploy
  - integration test

build-api:
  extends: .build-template
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    PART: "submissions-api"
    DOCKERFILE: "submissions-api/Dockerfile"
    NAME: "submissions-api"

build-ui:
  extends: .build-template
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    PART: "submissions-ui"
    DOCKERFILE: 'submissions-ui/Dockerfile'
    NAME: "submissions-ui"

build-ui-test:
  extends: .build-template
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    PART: "submissions-ui"
    DOCKERFILE: 'submissions-ui/Dockerfile.dev'
    NAME: "submissions-ui-test"

test-ui:
  image: $DOCKER_IMAGE
  stage: unit test
  services:
    - name: $DIND_IMAGE
      alias: docker
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker run -e CI=true $CI_REGISTRY_IMAGE/submissions-ui-test:$CI_COMMIT_SHA yarn test
  except:
    - production
    - staging

push-api:
  extends: .push-template
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    NAME: submissions-api

push-ui:
  extends: .push-template
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    NAME: submissions-ui

push-ui-test:
  extends: .push-template
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    NAME: submissions-ui-test

deploy-staging:
  extends: .swarm-deploy-template
  environment:
    name: staging
    url: https://submissions-staging.tol.sanger.ac.uk
  variables:
    DOCKER_HOST: "ssh://ubuntu@172.27.22.28"
    EXTRA_DEPLOY_FILES: "-c docker-compose.gitlab-logging.yml"
    STACK_NAME: submissions
  script:
    - echo "Deployed to staging"
  only:
    - staging

deploy-production:
  extends: .swarm-deploy-template
  environment:
    name: production
    url: https://submissions.tol.sanger.ac.uk/
  variables:
    DOCKER_HOST: "ssh://ubuntu@172.27.22.202"
    EXTRA_DEPLOY_FILES: "-c docker-compose.gitlab-logging.yml"
    STACK_NAME: submissions
  script:
    - echo "Deployed to production"
  only:
    - production
  when: manual

test-api:
  extends: .swarm-deploy-template
  image: $DOCKER_IMAGE
  stage: integration test
  resource_group: testing
  services:
    - name: $DIND_IMAGE
      alias: docker
  environment:
    name: testing
    url: http://172.27.21.168:8000
  variables:
    DOCKER_HOST: "ssh://ubuntu@172.27.21.168"
    EXTRA_DEPLOY_FILES: "-c docker-compose.gitlab-test.yml"
    STACK_NAME: submissions
  script:
    - sleep 60
    - docker exec $(docker ps -q -f name="submissions_submissions-api") bash -c "pytest -v"
  except:
    - staging
    - production
